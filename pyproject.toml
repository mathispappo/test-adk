[project]
name = "test-adk"
version = "0.1.0"
description = ""
authors = [
    {name = "Your Name",email = "you@example.com"}
]
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "google-adk (>=1.4.2,<2.0.0)",
    "python-dotenv (>=1.1.1,<2.0.0)",
    "pydantic (>=2.11.7,<3.0.0)",
    "fastapi (>=0.115.13,<0.116.0)",
    "litellm (>=1.73.0,<2.0.0)",
    "google-auth (>=2.40.3,<3.0.0)"
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.hatch.build.targets.wheel]
packages = ["agent", "api"]

[dependency-groups]
dev = [
    "pytest>=8.3.5",
    "ruff>=0.11.11",
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "N",  # PEP8 naming convetions
    "D"   # pydocstyle
]
ignore = [
    "C901",  # Too complex
    "D401",  # Imperative mood
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in `__init__`
    "E731"  # Lambda-assignment
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
